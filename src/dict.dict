#
# base.dict .... makedict.sh sample dictionary template
#

    org 0x8000
//
// cold start primitive
//
opcode cold
//
// nop, halt
//
opcode nop
opcode halt

//
// inner interpreter
//
opcode colon
opcode next
opcode run 
opcode startdoes
opcode semi
opcode execute
opcode trap

//
// primitives .. thread instructions
//
opcode dolit
opcode branch
opcode ?branch qbranch
opcode s_dolit

//
// primitives ... memory access
//
opcode c! cdepo
opcode ! depo
opcode c@ cfetch
opcode @ fetch

//
// stack operations
//
opcode rot
opcode swap
opcode drop
opcode over
opcode dup 
//
// return stack operation
//
opcode rsp
opcode r> r2s
opcode >r s2r
opcode r2> r22s
opcode >r2 s2r2

//
// operators
//
opcode not
opcode xor
opcode or
opcode and
opcode / div
opcode * mul
opcode - sub
opcode + add
opcode > gt
opcode /mod slashmod
//
// i/o primitives
//
opcode emit
//
// compilers/outer interpreter
//
opcode : colondef
opcode ; semidef immediate
opcode ;; semidef immediate

// dd ... dictdump ( addr -- )
opcode dd dictdump
opcode lnum
//
// compile
//
opcode +rsp add_rsp
opcode getline
opcode outer
opcode sp@ sp_at
opcode rp! rsp_reset
opcode sp! sp_reset

//
// double length integer
//
opcode d+ dadd
opcode m+ madd
opcode m*/ mmuldiv
opcode d< dlt
opcode u* umul
opcode d_dolit
//
// misc
//
opcode cold
opcode dictdump
