BEGIN {
    opcode_base = strtonum(0xc000)
    opcode["m_nop"] = 0 + opcode_base
    ropcode[0 + opcode_base] = "m_nop"
    opcode["m_halt"] = 1 + opcode_base
    ropcode[1 + opcode_base] = "m_halt"
    opcode["m_colon"] = 2 + opcode_base
    ropcode[2 + opcode_base] = "m_colon"
    opcode["m_next"] = 3 + opcode_base
    ropcode[3 + opcode_base] = "m_next"
    opcode["m_run"] = 4 + opcode_base
    ropcode[4 + opcode_base] = "m_run"
    opcode["m_semi"] = 5 + opcode_base
    ropcode[5 + opcode_base] = "m_semi"
    opcode["m_jnz"] = 6 + opcode_base
    ropcode[6 + opcode_base] = "m_jnz"
    opcode["m_jmp"] = 7 + opcode_base
    ropcode[7 + opcode_base] = "m_jmp"
    opcode["m__state"] = 8 + opcode_base
    ropcode[8 + opcode_base] = "m__state"
    opcode["m_create"] = 9 + opcode_base
    ropcode[9 + opcode_base] = "m_create"
    opcode["m_key"] = 10 + opcode_base
    ropcode[10 + opcode_base] = "m_key"
    opcode["m_emit"] = 11 + opcode_base
    ropcode[11 + opcode_base] = "m_emit"
    opcode["m_not"] = 12 + opcode_base
    ropcode[12 + opcode_base] = "m_not"
    opcode["m_xor"] = 13 + opcode_base
    ropcode[13 + opcode_base] = "m_xor"
    opcode["m_or"] = 14 + opcode_base
    ropcode[14 + opcode_base] = "m_or"
    opcode["m_and"] = 15 + opcode_base
    ropcode[15 + opcode_base] = "m_and"
    opcode["m_h"] = 16 + opcode_base
    ropcode[16 + opcode_base] = "m_h"
    opcode["m_last"] = 17 + opcode_base
    ropcode[17 + opcode_base] = "m_last"
    opcode["m_base"] = 18 + opcode_base
    ropcode[18 + opcode_base] = "m_base"
    opcode["m_type"] = 19 + opcode_base
    ropcode[19 + opcode_base] = "m_type"
    opcode["m_space"] = 20 + opcode_base
    ropcode[20 + opcode_base] = "m_space"
    opcode["m_bl"] = 21 + opcode_base
    ropcode[21 + opcode_base] = "m_bl"
    opcode["m_cr"] = 22 + opcode_base
    ropcode[22 + opcode_base] = "m_cr"
    opcode["m_period"] = 23 + opcode_base
    ropcode[23 + opcode_base] = "m_period"
    opcode["m_div"] = 24 + opcode_base
    ropcode[24 + opcode_base] = "m_div"
    opcode["m_mul"] = 25 + opcode_base
    ropcode[25 + opcode_base] = "m_mul"
    opcode["m_sub"] = 26 + opcode_base
    ropcode[26 + opcode_base] = "m_sub"
    opcode["m_add"] = 27 + opcode_base
    ropcode[27 + opcode_base] = "m_add"
     opcode["m_rot"] = 28 + opcode_base
    ropcode[28 + opcode_base] = "m_rot"
    opcode["m_swap"] = 29 + opcode_base
    ropcode[29 + opcode_base] = "m_swap"
    opcode["m_drop"] = 30 + opcode_base
    ropcode[30 + opcode_base] = "m_drop"
    opcode["m_over"] = 31 + opcode_base
    ropcode[31 + opcode_base] = "m_over"
    opcode["m_dup"] = 32 + opcode_base
    ropcode[32 + opcode_base] = "m_dup"
    opcode["m_comma"] = 33 + opcode_base
    ropcode[33 + opcode_base] = "m_comma"
    opcode["m_bytedeposite"] = 34 + opcode_base
    ropcode[34 + opcode_base] = "m_bytedeposite"
    opcode["m_exclamation"] = 35 + opcode_base
    ropcode[35 + opcode_base] = "m_exclamation"
    opcode["m_bytefetch"] = 36 + opcode_base
    ropcode[36 + opcode_base] = "m_bytefetch"
    opcode["m_atfetch"] = 37 + opcode_base
    ropcode[37 + opcode_base] = "m_atfetch"
    opcode["m_literal"] = 38 + opcode_base
    ropcode[38 + opcode_base] = "m_literal"
    opcode["m_execute"] = 39 + opcode_base
    ropcode[39 + opcode_base] = "m_execute"
    opcode["m_start_colondef"] = 40 + opcode_base
    ropcode[40 + opcode_base] = "m_start_colondef"
    opcode["m_end_colondef"] = 41 + opcode_base
    ropcode[41 + opcode_base] = "m_end_colondef"
}

